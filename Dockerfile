# Get started with a build env with Rust nightly
FROM rustlang/rust:nightly-bookworm as builder

# If youâ€™re using stable, use this instead
# FROM rust:1.88-bookworm as builder

# Install cargo-binstall, which makes it easier to install other
# cargo extensions like cargo-leptos
RUN wget https://github.com/cargo-bins/cargo-binstall/releases/latest/download/cargo-binstall-x86_64-unknown-linux-musl.tgz
RUN tar -xvf cargo-binstall-x86_64-unknown-linux-musl.tgz
RUN cp cargo-binstall /usr/local/cargo/bin

# Install required tools
RUN apt-get update -y \
    && apt-get install -y --no-install-recommends clang

# Install cargo-leptos
RUN cargo binstall cargo-leptos -y
RUN cargo install sqlx-cli


# Add the WASM target
RUN rustup target add wasm32-unknown-unknown

# Make an /app dir, which everything will eventually live in
RUN mkdir -p /app
WORKDIR /app
COPY . .
ENV DATABASE_URL="sqlite:Todos.db"
RUN sqlx database create
RUN sqlx migrate run
RUN cargo sqlx prepare
# Build the app
RUN cargo leptos build --release -vv

FROM debian:bookworm-slim as runtime
WORKDIR /app

# Install runtime dependencies
RUN apt-get update -y \
    && apt-get install -y --no-install-recommends \
    openssl \
    ca-certificates \
    sqlite3 \
    && apt-get autoremove -y \
    && apt-get clean -y \
    && rm -rf /var/lib/apt/lists/*

# Create directories for application data
RUN mkdir -p /app/data /app/logs

# Copy the server binary
COPY --from=builder /app/target/release/todo-leptos /app/

# Copy web assets (JS/WASM/CSS generated by leptos)
COPY --from=builder /app/target/site /app/site

# # Copy configuration files needed at runtime
# COPY --from=builder /app/Cargo.toml /app/
# COPY --from=builder /app/rust-toolchain.toml /app/
# COPY --from=builder /app/sqlx-data.json /app/

# Copy database files (SQLite database with WAL files)
COPY --from=builder /app/Todos.db /app/

# # Copy database migrations (needed for schema management)
# COPY --from=builder /app/migrations /app/migrations

# Copy static assets
COPY --from=builder /app/public /app/public

# Copy style files (SCSS source files, may be needed for hot reloading in dev)
COPY --from=builder /app/style /app/style


# Set environment variables
ENV RUST_LOG="info"
ENV LEPTOS_SITE_ADDR="0.0.0.0:8080"
ENV LEPTOS_SITE_ROOT="site"
ENV DATABASE_URL="sqlite:Todos.db"

# Set proper permissions for database files
RUN chmod 644 /app/Todos.db* 2>/dev/null || true
RUN chmod 755 /app/todo-leptos

# Expose the application port
EXPOSE 8080


# Run the server
CMD ["/app/todo-leptos"]
